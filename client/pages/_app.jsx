import CssBaseline from '@material-ui/core/CssBaseline';
import { StylesProvider, ThemeProvider } from '@material-ui/core/styles';
import Head from 'next/head';
import { useEffect } from 'react';
import AuthContextProvider from '../components/AuthContext';
import FlashContextProvider from '../components/FlashContext';
import theme from '../src/theme';


// Setting this outside of the component so it doesn't get recreated at every render!
const renderPage = page => page;

const MyApp = ({ Component, pageProps: {a, u, ...rest} }) => {
  /*
  Remove the server-side injected CSS generated by the JSS from material-ui
  to avoid duplication of css, since material-ui also renders the css client side
  */
  useEffect(() => {
    const jssStyles = document.querySelector('#jss-server-side');
    if (jssStyles) {
      jssStyles.parentElement.removeChild(jssStyles);
    }
  }, []);

  return (
    <>
      <Head>
        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="minimum-scale=1, initial-scale=1, width=device-width" />
        <link rel="canonical" href="https://circlefight.com/" />
        <meta name="description" content="Welcome to this 2D Web Game. Please enjoy it :D" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#2d89ef" />
        <meta name="msapplication-TileColor" content="#2d89ef" />
        <meta name="theme-color" content="#2d89ef" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" />
      </Head>
      <StylesProvider injectFirst>
        <ThemeProvider theme={theme}>
          <CssBaseline />
            <FlashContextProvider>
              <AuthContextProvider initialAToken={a} userData={u}>
                {(Component.getLayout || renderPage)(<Component {...rest} />)}
              </AuthContextProvider>
            </FlashContextProvider>
        </ThemeProvider>
      </StylesProvider>
    </>
  );
};

export default MyApp;

/*
Remember to always set rel="noopener noreferrer" when target="_blank" !!!

You should probably implement "og" meta tags for social media sites to better integrate links to my site:
https://metatags.io/

Jeg brugte den her hjemmeside til at lave meta icon tagsne og ikonerne i public mappen
https://realfavicongenerator.net/

Hvis jeg oplever dårlig performance på mobiler så kan jeg gøre det her for hver modal agtig
komponent jeg bruger: ModalProps={{keepMounted: true}} // Better open performance on mobile.
https://material-ui.com/components/modal/

Cannot use getStaticProps and getServerSideProps methods in _document and _app files because of some temporary restriction :(
*/